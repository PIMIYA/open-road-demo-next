name: Deploy dev to DigitalOcean

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      MainnetURL: ${{ secrets.MainnetURL }}
      TestnetURL: ${{ secrets.TestnetURL }}
      WalletRoleURL: ${{ secrets.WalletRoleURL }}
      AkaDropURL: ${{ secrets.AkaDropURL }}
      TZKT_URL: ${{ secrets.TZKT_URL }}
      NEXT_PUBLIC_PARTNER_ID: ${{ secrets.NEXT_PUBLIC_PARTNER_ID }}
      NEXT_PUBLIC_BAUTH_USERNAME: ${{ secrets.NEXT_PUBLIC_BAUTH_USERNAME }}
      NEXT_PUBLIC_BAUTH_PASSWORD: ${{ secrets.NEXT_PUBLIC_BAUTH_PASSWORD }}
      NEXT_PUBLIC_DIRECTUS_ADMIN_EMAIL: ${{ secrets.NEXT_PUBLIC_DIRECTUS_ADMIN_EMAIL }}
      NEXT_PUBLIC_DIRECTUS_ADMIN_PASSWORD: ${{ secrets.NEXT_PUBLIC_DIRECTUS_ADMIN_PASSWORD }}
      GoogleMapsAPIKey: ${{ secrets.GoogleMapsAPIKey }}
      WALLET_PRIVATE_KEY: ${{ secrets.WALLET_PRIVATE_KEY }}
      WALLET_PASSPHRASE: ${{ secrets.WALLET_PASSPHRASE }}
      SERVER_URL: ${{ secrets.SERVER_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.8.0

      - name: Install dependencies and build
        run: |
          npm install --legacy-peer-deps
          npm run build

      - name: Deploy dev to DigitalOcean
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa
          chmod 600 id_rsa
          ssh -o StrictHostKeyChecking=no -i id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            cd /var/www/dev.kairos-mint.art &&
            git pull origin dev &&
            npm install &&
            npm run build &&
            pm2 restart open-road-demo-next-dev
          "
          rm id_rsa # Remove the private key after use
